{"ast":null,"code":"var _jsxFileName = \"/home/wasi/asign/data-peace/src/App.js\";\nimport React, { Component, Fragment } from 'react';\nimport './App.css';\nimport Form from './components/Form';\nimport UserList from './components/UserList';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userList: [],\n      error: null,\n      isLoaded: false\n    };\n\n    this.getUsers = async e => {\n      const searchTextVal = e.target.elements.searchText.value;\n      e.preventDefault();\n      console.log(searchTextVal);\n      const api_call = await fetch(\"http://demo9197058.mockable.io/users\");\n      const data = await api_call.json();\n      console.log(data);\n      const user = data.filter(v => v.first_name.toLowerCase().indexOf(searchTextVal.toLowerCase()) > -1).slice(0, 5);\n      console.log(user);\n      this.setState({\n        userList: user\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://demo9197058.mockable.io/users\").then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        userList: result.slice(0, 5)\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          isLoaded = _this$state.isLoaded,\n          userList = _this$state.userList;\n\n    if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"App-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Users\")), React.createElement(Form, {\n        getUsers: this.getUsers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/wasi/asign/data-peace/src/App.js"],"names":["React","Component","Fragment","Form","UserList","App","state","userList","error","isLoaded","getUsers","e","searchTextVal","target","elements","searchText","value","preventDefault","console","log","api_call","fetch","data","json","user","filter","v","first_name","toLowerCase","indexOf","slice","setState","componentDidMount","then","res","result","render"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,MAAOC,GAAP,SAAmBJ,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAE3BK,KAF2B,GAEnB;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,KAAK,EAAE,IAFD;AAGNC,MAAAA,QAAQ,EAAE;AAHJ,KAFmB;;AAAA,SAkB3BC,QAlB2B,GAkBhB,MAAOC,CAAP,IAAa;AACtB,YAAMC,aAAa,GAAED,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBC,UAAlB,CAA6BC,KAAlD;AACAL,MAAAA,CAAC,CAACM,cAAF;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYP,aAAZ;AACA,YAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAD,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AACA,YAAME,IAAI,GAAGF,IAAI,CAACG,MAAL,CAAYC,CAAC,IAAIA,CAAC,CAACC,UAAF,CAAaC,WAAb,GAA2BC,OAA3B,CAAmCjB,aAAa,CAACgB,WAAd,EAAnC,IAAkE,CAAC,CAApF,EAAuFE,KAAvF,CAA6F,CAA7F,EAAgG,CAAhG,CAAb;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAYK,IAAZ;AAEA,WAAKO,QAAL,CAAc;AAACxB,QAAAA,QAAQ,EAAEiB;AAAX,OAAd;AAGD,KA/B0B;AAAA;;AAQ3BQ,EAAAA,iBAAiB,GAAG;AAClBX,IAAAA,KAAK,CAAC,sCAAD,CAAL,CACCY,IADD,CACMC,GAAG,IAAIA,GAAG,CAACX,IAAJ,EADb,EAECU,IAFD,CAEOE,MAAD,IAAY;AAChB,WAAKJ,QAAL,CAAc;AACZtB,QAAAA,QAAQ,EAAE,IADE;AAEZF,QAAAA,QAAQ,EAAE4B,MAAM,CAACL,KAAP,CAAa,CAAb,EAAe,CAAf;AAFE,OAAd;AAID,KAPD;AAQD;;AAeDM,EAAAA,MAAM,GAAG;AAAA,wBAEwB,KAAK9B,KAF7B;AAAA,UAECG,QAFD,eAECA,QAFD;AAAA,UAEWF,QAFX,eAEWA,QAFX;;AAGP,QAAI,CAACE,QAAL,EAAe;AACb,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,KAFD,MAEO;AACF,aACL;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF,EAIE,oBAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADK;AAgDF;AACJ;;AAvF0B;;AA0F7B,eAAeL,GAAf","sourcesContent":["import React,{Component,Fragment} from 'react';\nimport './App.css';\nimport Form from './components/Form';\nimport UserList from './components/UserList'\n\nclass  App extends Component {\n\n  state = {\n    userList: [],\n    error: null,\n    isLoaded: false,\n  }\n \n  componentDidMount() {\n    fetch(\"http://demo9197058.mockable.io/users\")\n    .then(res => res.json())\n    .then((result) => {\n      this.setState({\n        isLoaded: true,\n        userList: result.slice(0,5)\n      });\n    })\n  }\n  getUsers = async (e) => {\n    const searchTextVal= e.target.elements.searchText.value;\n    e.preventDefault();\n    console.log(searchTextVal);\n    const api_call = await fetch(\"http://demo9197058.mockable.io/users\");\n    const data = await api_call.json();\n    console.log(data)\n    const user = data.filter(v => v.first_name.toLowerCase().indexOf(searchTextVal.toLowerCase()) > -1).slice(0, 5);\n    console.log(user);\n    \n    this.setState({userList: user});\n    \n    \n  }\n  render() {\n    \n    const { isLoaded, userList } = this.state;\n    if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n         return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1 className=\"App-title\">Users</h1>\n      </header>\n      <Form getUsers={this.getUsers}/>\n      {/* <Fragment>\n          \n          <div className=\"container\">\n          \n      \n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th>Id</th>\n          <th>Name</th>\n          <th>Email</th>\n          <th>Age</th>\n          <th>Company Name</th>\n          <th>City</th>\n          \n        </tr>\n      </thead>\n      <tbody>\n        {userList.map(({id,age,first_name,company_name,city,email}, index) => {\n          return (\n        <tr key={index}>\n         \n          <td>{id}</td>\n          <td>{first_name}</td>\n          <td>{email}</td>\n          <td>{age}</td>\n          <td>{company_name}</td>\n          <td>{city}</td>\n      \n        </tr> \n          )\n        })}\n             \n    \n      </tbody>\n    </table>\n    \n  </div>\n  \n          </Fragment> */}\n    </div>\n  );\n      }\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}